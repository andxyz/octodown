#!/usr/bin/env ruby

require 'octodown'
require 'optparse'
require 'launchy'

include Octodown

# Default options
options = {
  gfm: false,
  port: 8080,
  presenter: :html,
  style: :github
}

OptionParser.new do |opts|
  opts.banner = 'Usage: octodown [options]'

  opts.on_tail '--version', 'Show version' do
    puts "octodown v#{Octodown::VERSION}"
    exit
  end

  opts.on(
    '-s', '--style [STYLE]', [:github, :atom, :githubformarkedapp], 'Choose style (atom, github, githubformarkedapp)'
  ) do |s|
    options[:style] = s
  end

  opts.on '-p', '--pdf', 'Generates a pdf file' do
    options[:presenter] = :pdf
  end

  opts.on '-r', '--raw', 'Print raw HTML to STDOUT' do
    options[:presenter] = :raw
  end

  opts.on '--raw-for-markedapp', 'Print raw HTML simplified without websocket or weburls to STDOUT' do
    options[:presenter] = :raw_for_markedapp
  end

  opts.on '-g', '--gfm', 'Use for non-README files (comments, etc)' do |g|
    options[:gfm] = g
  end

  opts.on '-l', '--live-reload', 'Start a LiveReload server' do
    options[:presenter] = :server
  end

  opts.on(
    '-P', '--port [PORT]', "LiveReload port (default: #{options[:port]})"
  ) do |port|
    options[:presenter] = :server
    options[:port] = port.to_i
  end

  opts.on_tail '-h', '--help', 'Show this message' do
    puts opts
    exit
  end
end.parse!

Octodown.call options
